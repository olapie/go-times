// Code generated by "stringer -type Timespan,Repeat -trimprefix=Timespan -output=enum_string.go"; DO NOT EDIT.

package times

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TimespanSecond-0]
	_ = x[TimespanMinute-1]
	_ = x[TimespanHour-2]
	_ = x[TimespanWeek-3]
	_ = x[TimespanBiWeek-4]
	_ = x[TimespanMonth-5]
	_ = x[TimespanBiMonth-6]
	_ = x[TimespanQuarter-7]
	_ = x[TimespanHalfYear-8]
	_ = x[TimespanYear-9]
}

const _Timespan_name = "SecondMinuteHourWeekBiWeekMonthBiMonthQuarterHalfYearYear"

var _Timespan_index = [...]uint8{0, 6, 12, 16, 20, 26, 31, 38, 45, 53, 57}

func (i Timespan) String() string {
	if i < 0 || i >= Timespan(len(_Timespan_index)-1) {
		return "Timespan(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Timespan_name[_Timespan_index[i]:_Timespan_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Never-0]
	_ = x[Daily-1]
	_ = x[Weekly-2]
	_ = x[BiWeekly-3]
	_ = x[Monthly-4]
	_ = x[Quarterly-5]
	_ = x[Yearly-6]
}

const _Repeat_name = "NeverDailyWeeklyBiWeeklyMonthlyQuarterlyYearly"

var _Repeat_index = [...]uint8{0, 5, 10, 16, 24, 31, 40, 46}

func (i Repeat) String() string {
	if i < 0 || i >= Repeat(len(_Repeat_index)-1) {
		return "Repeat(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Repeat_name[_Repeat_index[i]:_Repeat_index[i+1]]
}
